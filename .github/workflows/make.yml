name: CI Pipeline

on:
  pull_request:
    branches: [ develop ]
  push:
    branches: [ develop ]

jobs:
  default-build:
    strategy:
      matrix:
        cc: [ 'gcc', 'clang' ]
    name: compile test, default
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: install dependencies
      run: sudo apt-get install clang tcl tcl-dev openssl libssl-dev
    - name: Build
      env:
        CC: ${{ matrix.cc }}
      run: ./configure && make config eggdrop install
  feature-test:
    strategy:
      matrix:
        conf_tls: [ '', '--disable-tls' ]
        conf_ipv6: [ '', '--disable-ipv6' ]
        conf_tdns: [ '', '--disable-tdns' ]
    continue-on-error: true
    name: features
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: install dependencies
      run: sudo apt-get install tcl tcl-dev openssl libssl-dev
    - name: Build
      run: ./configure ${{ matrix.conf_tls }} ${{ matrix.conf_ipv6 }} ${{ matrix.conf_tdns }} && make config eggdrop
  tcl-versions:
    strategy:
      matrix:
        tcl_version: [ '8.5.19', '8.6.14', '8.7a5', '9.0b2' ]
    continue-on-error: true
    name: tcl-versions
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: install dependencies
      run: sudo apt-get install openssl libssl-dev
    - name: Build Tcl
      run: |
        wget http://prdownloads.sourceforge.net/tcl/tcl${{ matrix.tcl_version }}-src.tar.gz && \
        tar xzf tcl${{ matrix.tcl_version }}-src.tar.gz && \
        cd tcl${{ matrix.tcl_version }}/unix && \
        ./configure --prefix=$HOME/tcl && \
        make default install
    - name: Build
      run: ./configure --with-tcl=$HOME/tcl/lib && LD_LIBRARY_PATH=$HOME/tcl/lib make config eggdrop
