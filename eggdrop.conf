#! /path/to/executable/eggdrop
# ^- This should contain a fully qualified path to your Eggdrop executable.
#
# This is a sample Eggdrop configuration file which includes all possible
# settings that can be used to configure your bot.
#
# The pound signs (#) that you see at the beginning of some lines mean that
# the remainder of that line is a comment, or just for your information. By
# adding or deleting pound signs, you can comment or uncomment a setting,
# respectively.
#
# Arguments for a command or setting may be inclosed in <>'s or []'s in the
# example/description. Arguments in <>'s are required, while [] means optional.
#
# More detailed descriptions of all these settings can be found in
# doc/settings/.



##### BASIC SETTINGS #####

# This setting defines the username the bot uses on IRC. This setting has no
# effect if an ident daemon is running on your bot's machine. See also ident
# module.
set username "lamest"

# This setting defines which contact person should be shown in .status,
# /msg help, and other places. You really should include this information.
set admin "Lamer <email: lamer@lamest.lame.org>"

# This setting is used only for info to share with others on your botnet.
# Set this to the IRC network your bot is connected to.
set network "I.didn't.edit.my.config.file.net"

# This setting defines which timezone is your bot in. It's used for internal
# routines as well as for logfile timestamping and scripting purposes.
# The timezone string specifies the name of the timezone and must be three
# or more alphabetic characters. For example, Central European Time(UTC+1)
# should be "CET".
set timezone "EST"

# The offset setting specifies the time value to be added to the local
# time to get Coordinated Universal Time (UTC aka GMT). The offset is
# positive if the local timezone is west of the Prime Meridian and
# negative if it is east. The value (in hours) must be between -23 and
# 23. For example, if the timezone is UTC+1, the offset is -1.
set offset "5"

# If you don't want to use the timezone setting for scripting purposes only,
# but instead everywhere possible, un-comment the following line.
#set env(TZ) "$timezone$offset"

############################################################################
## Network settings overview
## With the addition of IPv6 and the associated config changes, here are some
## BASIC common networking scenarios, along with the appropriate settings
## needed:
##
## SHELL PROVIDER (MULTIPLE IPs/VHOSTS)
## * set vhost4 or vhost6 to the IP/vhost you want to use
## * do not set nat-ip
## 
## HOME COMPUTER/VPS, DIRECT INTERNET CONNECTION (SINGLE IP, NO NAT)
## * do not set vhost4/vhost6
## * do not set nat-ip
##
## HOME COMPUTER, BEHIND A NAT
## * do not set vhost4/vhost6
## * set nat-ip to your external IP
##
## And as a general rule, if you're having issues with Eggdrop responding to
## a CTCP chat request, try setting vhost4/6 to your external IP.
##
## Below is a detailed description of each setting, please read them to
## learn more about their function.
############################################################################

# If you're using virtual hosting (your machine has more than 1 IP), you
# may want to specify the particular IP to bind to. You can specify either
# by hostname or by IP. Note that this is not used for listening. Use the
# 'listen' command to specify the listening address. If you are behind a
# NAT, you will likely want to leave this commented out as Eggdrop should
# determine the correct IP on its own.
#set vhost4 "virtual.host.com"
#set vhost4 "99.99.0.0"

# IPv6 vhost to bind to for outgoing IPv6 connections. You can set it
# to any valid IPv6 address or hostname, resolving to an IPv6 address.
# Note that this is not used for listening. Use the 'listen' command
# to specify the listening address.
#set vhost6 "my.ipv6.host.com"
#set vhost6 "2001:db8::c001:b07"

# Prefer IPv6 over IPv4 for connections and dns resolution? Set to 1 to try 
# IPv6 first, otherwise set to 0 for IPv4. If the preferred protocol family
# is not supported, the other one will be tried.
set prefer-ipv6 0

# If you want to have your Eggdrop messages displayed in a language other
# than English, change this setting to match your preference. An alternative
# would be to set the environment variable EGG_LANG to that value.
#
# Languages included with Eggdrop: Danish, English, French, Finnish, German,
# Italian, Portuguese.
#addlang "english"


##### LOG FILES #####

# Eggdrop is capable of logging various things, from channel chatter to
# commands people use on the bot and file transfers. Logfiles are normally
# kept for 24 hours. Afterwards, they will be renamed to "(logfile).yesterday".
# After 48 hours, they will be overwritten by the logfile of the next day.
#
# Events are logged by certain categories. This way, you can specify
# exactly what kind of events you want sent to various logfiles.
#
# Logfile flags:
#   b - information about bot linking and userfile sharing
#   c - commands
#   d - misc debug information
#   g - raw outgoing share traffic
#   h - raw incoming share traffic
#   j - joins, parts, quits, topic changes, and netsplits on the channel
#   k - kicks, bans, and mode changes on the channel
#   l - linked bot messages
#   m - private msgs, notices and ctcps to the bot
#   o - misc info, errors, etc (IMPORTANT STUFF)
#   p - public text on the channel
#   r - raw incoming server traffic
#   s - server connects, disconnects, and notices
#   t - raw incoming botnet traffic
#   u - raw outgoing botnet traffic
#   v - raw outgoing server traffic
#   w - wallops (make sure the bot sets +w in init-server)
#   x - file transfers and file-area commands
#
# Note that modes d, h, r, t, and v can fill disk quotas quickly. There are
# also eight user-defined levels (1-8) which can be used by Tcl scripts.
#
# Each logfile belongs to a certain channel. Events of type 'k', 'j', and 'p'
# are logged to whatever channel they happened on. Most other events are
# currently logged to every channel. You can make a logfile belong to all
# channels by assigning it to channel "*".

#  This is the maximum number of concurrent logfiles that can be opened
#  for writing at one time. At most, this value should be the maximum
#  number of channels you expect to create log files for. There is no
#  value for 'infinity'; very few cases should ever require more than 20.
#  A decrease to this value while running will require a restart (not rehash)
#  of the bot. However, don't decrease it below 5.
set max-logs 20

# This is the maximum size of your logfiles. Set it to 0 to disable.
# This value is in kilobytes, so '550' would mean cycle logs when it
# reaches the size of 550 kilobytes. Note that this only works if you
# have keep-all-logs 0 (OFF).
set max-logsize 0

# This could be good if you have had problem with the logfile filling
# your quota/hard disk or if you log +p and publish it to the web and
# need more up-to-date info. Note that this setting might increase the
# CPU usage of your bot (on the other hand it will decrease your mem usage).
set quick-logs 0

# This setting allows you the logging of raw incoming server traffic via
# console/log flag 'r', raw outgoing server traffic via console/log mode 'v',
# raw incoming botnet traffic via console/log mode 't', raw outgoing botnet
# traffic via console/log mode 'u', raw outgoing share traffic via
# console/log mode 'g', and raw incoming share traffic via console/log
# mode 'h'. These flags can create a large security hole, allowing people to
# see user passwords. This is now restricted to +n users only. Please choose
# your owners with care.
set raw-log 0

# This creates a logfile named eggdrop.log that captures items logged at the
# m, c, and o log levels (private msgs/ctcps, commands/errors, and misc 
# info) from any channel.
logfile mco * "logs/eggdrop.log"

# This creates a logfile named lamest.log that captures items logged at the
# j, p, and k log levels (joins/parts/quits/netsplits, public chat,
# kicks/bans/mode changes) on the channel #lamest.
#logfile jpk #lamest "logs/lamest.log"

# Use this feature to timestamp entries in the log file.
set log-time 1

# Set the following to the timestamp for the logfile entries. Popular times
# might be "[%H:%M]" (hour, min), or "[%H:%M:%S]" (hour, min, sec).
# Read `man strftime' for more formatting options.  Keep it below 32 chars.
set timestamp-format {[%H:%M:%S]}

# If you want to keep your logfiles forever, turn this setting on. All
# logfiles will get suffix ".[day, 2 digits][month, 3 letters][year, 4 digits]".
# Note that your quota/hard-disk might be filled by this, so check your
# logfiles often and download them.
set keep-all-logs 0

# If keep-all-logs is 1, this setting will define the suffix of the logfiles.
# The default will result in a suffix like "04May2000". "%Y%m%d" will produce
# the often used yyyymmdd format. Read the strftime manpages for more options.
# NOTE: On systems which don't support strftime, the default format will
# be used _always_.
set logfile-suffix ".%d%b%Y"

# You can specify when Eggdrop should switch logfiles and start fresh. You
# must use military time for this setting. 300 is the default, and describes
# 03:00 (AM).
set switch-logfiles-at 300

# "Writing user file..." and "Writing channel file..." messages won't be logged
# anymore if this option is enabled. If you set it to 2, the "Backing up user
# file..." and "Backing up channel file..." messages will also not be logged.
# In addition to this, you can disable the "Switching logfiles..." and the new
# date message at midnight, by setting this to 3.
set quiet-save 0


##### CONSOLE #####

# This is the default console mode. It uses the same event flags as the log
# files do. The console channel is automatically set to your "primary" channel,
# which is set in the modules section of the config file. Masters can change
# their console channel and modes with the '.console' command.

set console "mkcoblxs"


##### FILES AND DIRECTORIES #####

# Specify here the filename your userfile should be saved as.
set userfile "LamestBot.user"

# Specify here the filename Eggdrop will save its pid to. If no pidfile is
# specified, pid.(botnet-nick) will be used.
#set pidfile "pid.LamestBot"

# Specify here where Eggdrop should look for help files. Don't modify this
# setting unless you know what you're doing!
set help-path "help/"

# Specify here where Eggdrop should look for text files. This is used for
# certain Tcl and DCC commands.
set text-path "text/"

# The MOTD (Message Of The day) is displayed when people dcc chat or telnet
# to the bot. Look at doc/TEXT-SUBSTITUTIONS for options.
set motd "text/motd"

# This banner will be displayed on telnet connections. Look at
# doc/TEXT-SUBSTITUTIONS for options.
set telnet-banner "text/banner"

# This specifies what permissions the user, channel, and notes files should
# be set to. The octal values are the same as for the chmod system command.
#
# To remind you:
#
#          u  g  o           u  g  o           u  g  o
#    0600  rw-------   0400  r--------   0200  -w-------    u - user
#    0660  rw-rw----   0440  r--r-----   0220  -w--w----    g - group
#    0666  rw-rw-rw-   0444  r--r--r--   0222  -w--w--w-    o - others
#
# Note that the default 0600 is the most secure one and should only be changed
# if you need your files for shell scripting or other external applications.
set userfile-perm 0600


##### BOTNET/DCC/TELNET #####

# Settings in this section should be unimportant for you until you deal
# with botnets (multiple Eggdrops connected together to maximize efficiency).
# You should read doc/BOTNET before modifying these settings.

# If you want to use a different nickname on the botnet than you use on
# IRC (i.e. if you're on an un-trusted botnet), un-comment the next line
# and set it to the nick you would like to use.
#set botnet-nick "LlamaBot"

# This opens a telnet port by which you and other bots can interact with the
# Eggdrop by telneting in. There are more options for the listen command in
# doc/tcl-commands.doc. Note that if you are running more than one bot on the
# same machine, you will want to space the telnet ports at LEAST 5 apart,
# although 10 is even better.
#
# Valid ports are typically anything between 1025 and 65535 assuming the
# port is not already in use. If you would like the bot to listen for users
# and bots in separate ports, use the following format:
#
#   listen 3333 bots
#   listen 4444 users
#
# If you wish to use only one port, use this format:
#
#   listen 3333 all
#
# You can setup a SSL port by prepending a plus sign to it:
#
#   listen +5555 all
#
# To bind the listening port to a specific IP instead of all available, insert
# a valid IP assigned to the host Eggdrop is running on infront of the port
# (this replaces the listen-addr setting used prior to Eggdrop v1.9)
#
#   listen 1.2.3.4 3333 all
#
# You need to un-comment this line and change the port number in order to open
# the listen port. You should not keep this set to 3333.
#listen 3333 all

# This setting defines whether or not people can boot users on the Eggdrop
# from other bots in your botnet.
# Options are:
#   0 = allow *no* outside boots
#   1 = allow boots from sharebots
#   2 = allow any boots
set remote-boots 2

# This setting allows remote bots to tell your Eggdrop to unlink from
# share bots.
set share-unlinks 1

# This setting will drop telnet connections not matching a known host.
set protect-telnet 0

# This setting will make the bot ignore DCC chat requests which appear to
# have bogus information on the grounds that the user may have been trying
# to make the bot connect to somewhere that will get it into trouble, or
# that the user has a broken client, in which case the connect wouldn't work
# anyway.
set dcc-sanitycheck 0

# This setting defines the time in seconds the bot should wait for ident reply
# before the lookup fails. The default ident on timeout is 'telnet'. A value of
# 0 disables the ident lookup entirely.
set ident-timeout 5

# Define here whether or not a +o user still needs the +p flag to dcc the bot.
set require-p 1

# If you want people allow to telnet in and type 'NEW' to become a new user,
# set this to 1. This is similar to the 'hello' msg command. The protect-telnet
# setting must be set to 0 to use this.
set open-telnets 0

# If you don't want Eggdrop to identify itself as an eggdrop on a telnet
# connection, set this setting to 1. Eggdrop will display a logon prompt with
# only the contents of the stealth-prompt setting.
set stealth-telnets 0

# If stealth-telnets is 1, the string in this setting will replace the
# traditional Eggdrop banner. Two common choices are listed. (The \n's are
# present to maintain backwards compatibility and will be removed in a
# future release)
#set stealth-prompt "login: "
set stealth-prompt "\n\nNickname.\n"

# If you want Eggdrop to display a banner when telneting in, set this setting
# to 1. The telnet banner is set by 'set telnet-banner'.
set use-telnet-banner 0

# This setting defines a time in seconds that the bot should wait before
# a dcc chat, telnet, or relay connection times out.
set connect-timeout 15

# Specify here the number of lines to accept from a user on the partyline
# within 1 second before they are considered to be flooding and therefore
# get booted.
set dcc-flood-thr 3

# Define here how many telnet connection attempts in how many seconds from
# the same host constitute a flood. The correct format is Attempts:Seconds.
set telnet-flood 5:60

# If you want telnet-flood to apply even to +f users, set this setting to 1.
set paranoid-telnet-flood 1

# Set here the amount of seconds before giving up on hostname/address lookup
# (you might want to increase this if you are on a slow network). The default is
# RES_TIMEOUT, which is generally 5, the allowed maximum is RES_MAXRETRANS (see
# <resolv.h>).
#set resolve-timeout 5


##### SSL SETTINGS #####

# Settings in this section take effect when eggdrop is compiled with TLS
# support.
#
# IMPORTANT: The following two settings MUST be uncommented in order to
# use SSL functionality!

# File containing your private key, needed for the SSL certificate
# (see below). You can create one issuing the following command:
#
#   openssl genrsa -out eggdrop.key 4096
#
# It will create a 4096 bit RSA key, strong enough for eggdrop.
# For your convenience, you can type 'make sslcert' after 'make install'
# and you'll get a key and a certificate in your eggdrop directory.
# If you installed to a non-default location, use 'make sslcert DEST=...'
#
# THIS IS REQUIRED if you intend to use this bot as a hub for SSL hubs/
# listen ports, secure file transfer, /ctcp botnick schat, or
# using a certificate to authenticate with NickServ.
#set ssl-privatekey "eggdrop.key"

# Specify the filename where your SSL certificate is located. If you
# don't set this, eggdrop will not be able to act as a server in SSL
# connections, as with most ciphers a certificate and a private key
# are required on the server side. Must be in PEM format.
# If you don't have one, you can create it using the following command:
#
#   openssl req -new -key eggdrop.key -x509 -out eggdrop.crt -days 365
#
# For your convenience, you can type 'make sslcert' after 'make install'
# and you'll get a key and a certificate in your eggdrop directory.
# If you installed to a non-default location, use 'make sslcert DEST=...'
#
# THIS IS REQUIRED if you intend to use this bot as a hub for SSL hubs/
# listen ports, secure file transfer, /ctcp botnick schat, or
# using a certificate to authenticate with NickServ.
#set ssl-certificate "eggdrop.crt"

# Sets the maximum depth for the certificate chain verification that will
# be allowed for ssl. When certificate verification is enabled, any chain
# exceeding this depth will fail verification.
#set ssl-verify-depth 9

# Specify the location at which CA certificates for verification purposes
# are located. These certificates are trusted. If you don't set this,
# certificate verification will not work.
set ssl-capath "/etc/ssl/"
#set ssl-cafile ""

# Specify the list of protocols allowed for use with ssl. The protocol list is
# one or more protocol strings separated by spaces. Available protocols are
# SSLv2, SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3.
# set ssl-protocols "TLSv1 TLSv1.1 TLSv1.2 TLSv1.3" 

# Specify the list of ciphers (in order of preference) allowed for use with
# ssl. The cipher list is one or more cipher strings separated by colons,
# commas or spaces. Unavailable ciphers are silently ignored unless no usable
# cipher could be found. For the list of possible cipher strings and their
# meanings, please refer to the ciphers(1) manual.
# Note: if you set this, the value replaces any ciphers OpenSSL might use by
# default. To include the default ciphers, you can put DEFAULT as a cipher
# string in the list.
# For example:
#
#   set ssl-ciphers "DEFAULT ADH"
#
# This will make eggdrop allow the default OpenSSL selection plus anonymous
# DH ciphers.
#
#   set ssl-ciphers "ALL"
#
# This will make eggdrop allow all ciphers supported by OpenSSL, in a
# reasonable order.
#set ssl-ciphers ""

# Specify the location of a dhparam file. This file is necessary if you are
# using a Diffie-Hellman based key exchange. If you don't know what this is,
# you are probably safe leaving it commented.
# You can create a dhparam file using the following command:
#   openssl dhparam -out dhparam.pem 4096
#set ssl-dhparam "dhparam.pem"

# Enable certificate authorization. Set to 1 to allow users and bots to
# identify automatically by their certificate fingerprints. Setting it
# to 2 to will force fingerprint logins. With a value of 2, users without
# a fingerprint set or with a certificate UID not matching their handle
# won't be allowed to login on SSL enabled telnet ports. Fingerprints
# must be set in advance with the .fprint and .chfinger commands.
# NOTE: this setting has no effect on plain-text ports.
#set ssl-cert-auth 0

# You can control SSL certificate verification using the following variables.
# All of them are flag-based. You can set them by adding together the numbers
# for all exceptions you want to enable. By default certificate verification
# is disabled and all certificates are assumed to be valid. The numbers are
# the following:
#
# Enable certificate verification - 1
# Allow self-signed certificates - 2
# Don't check peer common or alt names - 4
# Allow expired certificates - 8
# Allow certificates which are not valid yet - 16
# Allow revoked certificates - 32
# A value of 0 disables verification.

# Control certificate verification for DCC chats (only /dcc chat botnick)
#set ssl-verify-dcc 0

# Control certificate verification for linking to hubs
#set ssl-verify-bots 0

# Control certificate verification for SSL listening ports. This includes
# leaf bots connecting, users telneting in and /ctcp bot chat.
#set ssl-verify-clients 0


##### MORE ADVANCED SETTINGS #####

# Set this to your socks host if your Eggdrop sits behind a firewall. If
# you use a Sun "telnet passthru" firewall, prefix the host with a '!'.
#set firewall "!sun-barr.ebay:3666"

# If you have a NAT firewall (your box has an IP in one of the following
# ranges: 192.168.0.0-192.168.255.255, 172.16.0.0-172.31.255.255,
# 10.0.0.0-10.255.255.255 and your firewall transparently changes your
# address to a unique address for your box) or you have IP masquerading
# between you and the rest of the world, and /dcc chat, /ctcp chat or
# userfile sharing aren't working, enter your outside IP here. This IP
# is used for transfers and CTCP replies only, and is different than the
# vhost4/6 settings. You likely still need to set them.
#set nat-ip "127.0.0.1"

# If you want all dcc file transfers to use a particular portrange either
# because you're behind a firewall, or for other security reasons, set it
# here.
#set reserved-portrange 2010:2020

# Set the time in minutes that temporary ignores should last.
set ignore-time 15

# Define here what Eggdrop considers 'hourly'. All calls to it, including such
# things as note notifying or userfile saving, are affected by this.
# For example:
#
#   set hourly-updates 15
#
# The bot will save its userfile 15 minutes past every hour.
set hourly-updates 00

# Un-comment the next line and set the list of owners of the bot.
# You NEED to change this setting.
# This is a list of handles -- usernames in the bot.
#set owner "MrLame, MrsLame"

# Who should a note be sent to when new users are learned?
set notify-newusers "$owner"

# Enter the flags that new users added via the 'hello' message command (see
# 'learn-users' description further down) should get by default. See 
# '.help whois' on the partyline for a list of flags and their descriptions.
set default-flags "hp"

# Enter all user-defined fields that should be displayed in a '.whois'.
# This will only be shown if the user has one of these extra fields.
# You might prefer to comment this out and use the userinfo1.0.tcl script
# which provides commands for changing all of these.
set whois-fields "url birthday"

# Uncomment these two lines if you wish to disable the .tcl and .set commands.
# If you select your owners wisely, you should be okay enabling these.
#unbind dcc n tcl *dcc:tcl
#unbind dcc n set *dcc:set

# If you enable this setting, only permanent owners (owner setting) will be
# able to use .tcl and .set. Moreover, if you want only let permanent owners
# use .dump, then set this to 2.
# WARNING: setting this to 0 is a security risk, don't do it unless you trust
# your owners enough to give them shell access to the account the bot is
# running on. 
set must-be-owner 1

# Comment out this line to add the 'simul' partyline command (owners can
# manipulate other people on the party line). Please select owners wisely
# and use this command ethically!
unbind dcc n simul *dcc:simul

# Set here the maximum number of socket connections you will allow. You can
# increase this later, but never decrease it below current usage.
# If you're using Tcl threads, this is a per-thread maximum.
set max-socks 100

# Enable this setting if you want +d & +k users to use commands bound as -|-.
set allow-dk-cmds 1

# If your Eggdrop rejects bots that actually have already disconnected from
# another hub, but the disconnect information has not yet spread over the
# botnet due to lag, use this setting. The bot will wait dupwait-timeout
# seconds before it checks again and then finally reject the bot.
set dupwait-timeout 5

# Enable cidr support for b/e/I modes. This means the bot will understand
# and match modes in cidr notation, and will be able to put and enforce such
# bans or unban itself, if banned with a cidr mask.
# Do NOT set this, if your network/server does not support cidr!
set cidr-support 0

# Disable this setting if you do not want to show name and release level of the
# operating system. You'll probably also want to edit the default motd (in
# text/motd) and remove its display from there.
set show-uname 1

# You MUST remove this line for your bot to start. This has been added to
# prevent you from starting up a bot that is not fully configured. Bots
# that have not been fully configured may join the wrong IRC network, the
# wrong channels, or generally do things that you do not want. Please make
# sure that you have double-checked every setting. There's also a similar line
# lower down, just to make sure you're reading :)
die "Please make sure you edit your config file completely."

##### MODULES #####

# Below are various settings for the modules included with Eggdrop.
# PLEASE READ AND EDIT THEM CAREFULLY, even if you're an old hand at
# Eggdrop, things change.

# This path specifies the path were Eggdrop should look for its modules.
# If you run the bot from the compilation directory, you will want to set
# this to "". If you use 'make install' (like all good kiddies do ;), this
# is a fine default. Otherwise, use your head :)

set mod-path "modules/"

# Comment out this next line. Otherwise, your bot won't start.
die "You didn't edit your config file completely like you were told, did you?"

# This next line checks if eggdrop is being executed from the source directory
if {[file exists aclocal.m4]} { die {You are attempting to run Eggdrop from the source directory. Please finish installing Eggdrop by running "make install" and run it from the install location.} }

##### SCRIPTS #####

# This is a good place to load scripts to use with your bot.

# This line loads script.tcl from the scripts directory inside your Eggdrop's
# directory. All scripts should be put there, although you can place them where
# you like as long as you can supply a fully qualified path to them.
#
# source scripts/script.tcl

source scripts/alltools.tcl
source scripts/action.fix.tcl

# This script enhances Eggdrop's built-in dcc '.whois' command to allow all
# users to '.whois' their own handle.
source scripts/dccwhois.tcl

# This script provides many useful informational functions, like setting
# users' URLs, e-mail address, ICQ numbers, etc. You can modify it to add
# extra entries.
source scripts/userinfo.tcl
loadhelp userinfo.help

# Use this script for Tcl and Eggdrop backwards compatibility.
# NOTE: This can also cause problems with some newer scripts.
#source scripts/compat.tcl

# A few IRC networks (EFnet and Undernet) have added some simple checks to
# prevent drones from connecting to the IRC network. While these checks are
# fairly trivial, they will prevent your Eggdrop from automatically
# connecting. In an effort to work-around these, we have developed a couple of
# TCL scripts to automate the process.

if {[info exists net-type]} {
  switch -- ${net-type} {
    "EFnet" {
      # EFnet
      source scripts/quotepong.tcl
    }
    "0" {
      # EFnet
      source scripts/quotepong.tcl
    }
  }
}
