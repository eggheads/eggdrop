%{help=set botnet-nick}%{+n}
###  %bset botnet-nick%b <nickname>
   If you want to use a different nickname on the botnet than you
   use on IRC (i.e. if you're on an un-trusted botnet), set this
   setting to the nick you would like to use.
%{help=set userfile}%{+n}
###  %bset userfile%b <filename>
   Specify here the filename your userfile should be saved as.
%{help=set motd}%{+n}
###  %bset motd%b <filename>
   The MOTD (Message Of The day) is displayed when people dcc chat or
   telnet to the bot. Look at doc/TEXT-SUBSTITUTIONS for options.
%{help=set telnet-banner}%{+n}
###  %bset telnet-banner%b <filename>
   This banner will be displayed on telnet connections. Look at
   doc/TEXT-SUBSTITUTIONS for options.
%{help=set admin}%{+n}
###  %bset admin%b <admin-info>
   This setting defines which contact person should be shown in
   .status, /msg help, and other places. You really should include
   this information.
%{help=set notify-newusers}%{+n}
###  %bset notify-newusers%b <nickname-list>
   Who should a note be sent to when new users are learned?
%{help=set owner}%{+n}
###  %bset owner%b <nickname-list>
   This is a list of owners of the bot.
%{help=set vhost4}%{+n}
###  %bset vhost4%b <ipv4-address|hostname>
   If you're using virtual hosting (your machine has more than 1 IP),
   you may want to set this to a particular IP to bind to. You can
   specify either by hostname or by IP. Note that this is not used for
   listening. Use the listen-addr variable to specify the listening
   address.
%{help=set vhost6}%{+n}
###  %bset vhost6%b <ipv6-address|hostname>
   IPv6 vhost to bind to for outgoing IPv6 connections. You can set it
   to any valid IPv6 address or hostname, resolving to an IPv6 address.
   Note that this is not used for listening. Use the listen-addr
   variable to specify the listening address.
%{help=set nat-ip}%{+n}
###  %bset nat-ip%b <ip-address>
   If you have a NAT firewall (you box has an IP in one of the
   following ranges: 192.168.0.0-192.168.255.255,
   172.16.0.0-172.31.255.255, 10.0.0.0-10.255.255.255 and your
   firewall transparently changes your address to a unique address
   for your box) or you have IP masquerading between you and the
   rest of the world, and /dcc chat, /ctcp chat or userfile sharing
   aren't working, enter your outside IP here. This IP is used for
   transfers only, and has nothing to do with the vhost4/6 or
   listen-addr settings. You may still need to set them.
%{help=set listen-addr}%{+n}
###  %bset listen-addr%b <ip-address/hostname>
   You can specify a particular IPv4/IPv6 address (or hostname)
   to bind for listening, e.g. for the 'listen' tcl command or
   for file sending.
%{help=set prefer-ipv6}%{+n}
###  %bset prefer-ipv6%b <0/1>
  Prefer IPv6 over IPv4 for connections and dns resolution.
  If the preferred protocol family is not supported, the other
  one will be tried.
%{help=set dcc-sanitycheck}%{+n}
###  %bset dcc-sanitycheck%b <0/1>
   This setting will make the bot ignore DCC chat requests which
   appear to have bogus information on the grounds that the user may
   have been trying to make the bot connect to somewhere that will
   get it into trouble, or that the user has a broken client, in
   which case the connect wouldn't work anyway.
%{help=set network}%{+n}
###  %bset network%b <net-name>
   This setting is used only for info to share with others on your
   botnet. Set this to the IRC network your bot is connected to.
%{help=set whois-fields}%{+n}
###  %bset whois-fields%b <field-list>
   Enter all user-defined fields that should be displayed in a
   '.whois'. This will only be shown if the user has one of these
   extra fields. You might prefer to comment this out and use the
   userinfo1.0.tcl script which provides commands for changing all
   of these.
%{help=set username}%{+n}
###  %bset username%b <username>
   This setting defines the username the bot uses on IRC. This setting
   has no effect if an ident daemon is running on your bot's machine.
%{help=set version}%{+n}
###  %bset version%b
   Current bot version - "1.1.2+pl1 1010201 pl1"; first item is the
   text version, second item is a numerical version, and any following
   items are the names of patches that have been added.
%{help=set firewall}%{+n}
###  %bset firewall%b <host:port>
   Set this to your socks host if your Eggdrop sits behind a
   firewall. If you use a Sun "telnet passthru" firewall, prefix
   the host with a '!'.
%{help=set telnet-flood}%{+n}
###  %bset telnet-flood%b <times:seconds>
   Define here how many telnet connection attempts in how many
   seconds from the same host constitute a flood. The correct
   format is Attempts:Seconds.
%{help=set paranoid-telnet-flood}%{+n}
###  %bset paranoid-telnet-flood%b <0/1>
   If you want telnet-flood to apply even to +f users, set this
   setting to 1.
%{help=set ignore-time}%{+n}
###  %bset ignore-time%b <time>
   The time in minutes that temporary ignores should last.
%{help=set dcc-flood-thr}%{+n}
###  %bset dcc-flood-thr%b <number>
   Specify here the number of lines to accept from a user on the
   partyline within 1 second before they are considered to be
   flooding and therefore get booted.
%{help=set hourly-updates}%{+n}
###  %bset hourly-updates%b <military time>
   Define here what Eggdrop considers 'hourly'. All calls to it,
   including such things as note notifying or userfile saving, are
   affected by this.
%{help=set switch-logfiles-at}%{+n}
###  %bset switch-logfiles-at%b <military-time>
   You can specify when Eggdrop should switch logfiles and start
   fresh. You must use military time for this setting. 300 is the
   default, and describes 03:00 (AM).
%{help=set connect-timeout}%{+n}
###  %bset connect-timeout%b <seconds>
   This setting defines a time in seconds that the bot should
   wait before a dcc chat, telnet, or relay connection times out.
%{help=set resolve-timeout}%{+n}
###  %bset resolve-timeout%b <seconds>
   Set here the amount of seconds before giving up on hostname/address
   lookup (you might want to increase this if you are on a slow network).
   The default is RES_TIMEOUT, which is generally 5, the allowed maximum is
   RES_MAXRETRANS (see <resolv.h>).
%{help=set dupwait-timeout}%{+n}
###  %bset dupwait-timeout%b <seconds>
   If your Eggdrop rejects bots that actually have already
   disconnected from another hub, but the disconnect information has
   not yet spread over the botnet due to lag, use this setting. The
   bot will wait dupwait-timeout seconds before it checks again and
   then finally reject the bot.
%{help=set reserved-portrange}%{+n}
###  %bset reserved-portrange%b <lowport>:<highport>
   If you want all dcc file transfers to use a particular portrange
   either because you're behind a firewall, or for other security
   reasons, set it here.
%{help=set require-p}%{+n}
###  %bset require-p%b <0/1>
   Define here whether or not a +o user still needs the +p flag to
   dcc the bot.
%{help=set keep-all-logs}%{+n}
###  %bset keep-all-logs%b <0/1>
   If you want to keep your logfiles forever, turn this setting on.
   All logfiles will get suffix
   ".[2 digit day][3 letter month][4 digit year]". Note that your
   quota/hard-disk might be filled by this, so check your logfiles
   often and download them.
%{help=set open-telnets}%{+n}
###  %bset open-telnets%b <0/1>
   If you want people allow to telnet in and type 'NEW' to become a
   new user, set this to 1. This is similar to the 'hello' msg
   command. The protect-telnet setting must be set to 0 to use this.
%{help=set stealth-telnets}%{+n}
###  %bset stealth-telnets%b <0/1>
   If you don't want Eggdrop to identify itself as an eggdrop on a
   telnet connection, set this setting to 1. Eggdrop will display a
   logon prompt with only the contents of the stealth-prompt setting.
%{help=set stealth-prompt}%{+n}
###  %bset stealth-prompt%b <string>
   If stealth-telnets is 1, the string in this setting will replace
   the traditional Eggdrop banner.
%{help=set use-telnet-banner}%{+n}
###  %bset use-telnet-banner%b <0/1>
   If you want Eggdrop to display a banner when telneting in, set
   this setting to 1. The telnet banner is set by 'set telnet-banner'.
%{help=set handlen}%{+n}
###  %bset handlen%b
   This is the max length handles may be on the bot.
%{help=set console}%{+n}
###  %bset console%b <console-flags>
   This is the default console mode. It uses the same event flags
   as the log files do. The console channel is automatically set to
   your "primary" channel, which is set in the modules section of
   the config file. Masters can change their console channel and modes
   with the '.console' command.
%{help=set default-flags}%{+n}
###  %bset default-flags%b <flags>
   Enter the flags that all new users should get by default. See
   '.help whois' on the partyline for a list of flags and their
   descriptions.
%{help=set log-time}%{+n}
###  %bset log-time%b <0/1>
   Use this feature to timestamp entries in the log file.
%{help=set timestamp-format}%{+n}
###  %bset timestamp-format%b <format>
   Set the following to the timestamp for the logfile entries. Popular
   times might be "[%H:%M]" (hour,min), or "[%H:%M:%S]" (hour, min, sec).
   Read `man strftime' for more formatting options.  Keep it below 32
   chars.
%{help=set max-logsize}%{+n}
###  %bset max-logsize%b <filesize>
   This is the maximum size of your logfiles. Set it to 0 to disable.
   This value is in kilobytes, so '550' would mean cycle logs when it
   reaches the size of 550 kilobytes. Note that this only works if you
   have keep-all-logs 0 (OFF).
%{help=set quick-logs}%{+n}
###  %bset quick-logs%b <0/1>
   This could be good if you have had problem with the logfile
   filling your quota/hard disk or if you log +p and publish it to
   the web and need more up-to-date info. Note that this setting
   might increase the CPU usage of your bot (on the other hand it will
   decrease your mem usage).
%{help=set logfile-suffix}%{+n}
###  %bset logfile-suffix%b <suffix>
   If keep-all-logs is 1, this setting will define the suffix of the
   logfiles. The default will result in a suffix like "04May2000".
   "%Y%m%d" will produce the often used yyyymmdd format. Read the
   strftime manpages for more options. NOTE: On systems which don't
   support strftime, the default format will be used _always_.
%{help=set quiet-save}%{+n}
###  %bset quiet-save%b <0/1/2/3>
   "Writing user file..." and "Writing channel file..." messages won't
   be logged anymore if this option is enabled. If you set it to 2, the
   "Backing up user file..." and "Backing up channel file..." messages
   will also not be logged. In addition to this, you can disable the
   "Switching logfiles..." and the new date message at midnight, by
   setting this to 3.
%{help=set remote-boots}%{+n}
###  %bset remote-boots%b <0/1>
   This setting defines whether or not people can boot users on the
   Eggdrop from other bots in your botnet. Valid settings are:
     0 - allow *no* outside boots
     1 - allow boots from sharebots
     2 - allow any boots
%{help=set max-socks}%{+n}
###  %bset max-socks%b <max dcc connections>
   Set here the maximum number of socket connections you will allow. You can
   increase this later, but never decrease it below current usage. If you're
   using Tcl threads, this is a per-thread maximum.
%{help=set max-logs}%{+n}
###  %bset max-logs%b <max number of logs>
   This is the maximum number of logfiles allowed. This setting
   can be increased; however, don't decrease it.
%{help=set protect-telnet}%{+n}
###  %bset protect-telnet%b <0/1>
   This setting will drop telnet connections not matching a known
   host.
%{help=set ident-timeout}%{+n}
###  %bset ident-timeout%b <timeout>
   This setting defines the time in seconds the bot should wait for ident
   reply before the lookup fails. The default ident on timeout is 'telnet'.
%{help=set share-unlinks}%{+n}
###  %bset share-unlinks%b 0/1
   This setting prohibits remote bots from telling your Eggdrop to
   unlink from share bots.
%{help=set cidr-support}%{+n}
###  %bset cidr-support%b <0/1>
   Enables cidr support for b/e/I modes if set to 1. This means the
   bot will understand and match modes in cidr notation, and will
   be able to put and enforce such bans or unban itself, if banned 
   with a cidr mask.
     Warning: enabling this on servers which don't support cidr may
   result in kick floods or other problems.
%{help=set allow-dk-cmds}%{+n}
###  %bset allow-dk-cmds%b <0/1>
   Enable this setting if you want +d & +k users to use commands
   bound as -|-.
%{help=set userfile-perm}%{+n}
###  %bset userfile-perm%b <octal value>
   This specifies what permissions the user, channel, and notes
   files should be set to. The octal values are the same as for
   the chmod system command.
%{help=set ssl-certificate}%{+n}
###  %bset ssl-certificate%b <filename>
   Specify the filename where your SSL certificate is located. If
   you don't set this, eggdrop will not be able to act as a server
   in SSL connections, as with most ciphers a certificate and a
   private key are required on the server side. Must be in PEM
   format.
%{help=set ssl-privatekey}%{+n}
###  %bset ssl-privatekey%b <filename>
   File containing your private RSA key used for SSL connections.
%{help=set ssl-verify-depth}%{+n}
###  %bset ssl-verify-depth%b <depth>
   Sets the maximum depth for the certificate chain verification
   that will be allowed for ssl. When certificate verification is
   enabled, any chain exceeding this depth will fail verification.
%{help=set ssl-capath}%{+n}
###  %bset ssl-capath%b <directory>
   Specify the location where CA certificates for verification
   purposes are located. These certificates are trusted. If you
   don't set this or ssl-cafile, certificate verification will not
   work.

See also: ssl-cafile
%{help=set ssl-cafile}%{+n}
###  %bset ssl-cafile%b <filename>
   Specify a file which contains CA certificates for verification
   purposes. These certificates are trusted. If you don't set this
   or ssl-capath, certificate verification will not work.

See also: set ssl-capath
%{help=set ssl-protocols}%{+n}
###  %bset ssl-protocols%b <protocol list>
   Specify the list of protocols allowed for use with ssl. The protocol list
   is one or more protocol strings separated by spaces. Available protocols
   are SSLv2, SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3. Default is
   "TLSv1 TLSv1.1 TLSv1.2 TLSv1.3".
%{help=set ssl-dhparam}%{+n}
###  %bset ssl-dhparam%b <filename>
   Specify dhparam filename. You can create it using the following command:
   openssl dhparam -out dhparam.pem 4096
%{help=set ssl-ciphers}%{+n}
###  %bset ssl-ciphers%b <cipher list>
   Specify the list of ciphers (in order of preference) allowed for
   use with ssl. The cipher list is one or more cipher strings
   separated by colons, commas or spaces. Unavailable ciphers are
   silently ignored unless no usable cipher could be found. For the
   list of possible cipher strings and their meanings, please refer
   to the ciphers(1) manual.
   If you set this, the value replaces any ciphers OpenSSL might use
   by  default. To include the default ciphers, you can put DEFAULT
   as a cipher string in the list. This setting may not impact TLSv1.3
   ciphersuites.
%{help=set ssl-cert-auth}%{+n}
###  %bset ssl-cert-auth%b <0/1/2>
   Enable certificate authorization. Set to 1 to allow users and bots
   to identify automatically by their certificate fingerprints. Setting
   it to 2 to will force fingerprint logins. With a value of 2, users
   without a fingerprint set or with a certificate UID not matching
   their handle won't be allowed to login on SSL enabled telnet ports.
   Fingerprints must be set in advance with the .fprint and .chfinger
   commands.
   NOTE: this setting has no effect on plain-text ports.
%{help=set ssl-verify-dcc}%{+n}
###  %bset ssl-verify-dcc%b <#>
   Control certificate verification for DCC chats (/dcc chat botnick)

See also: set ssl-verify-clients
%{help=set ssl-verify-bots}%{+n}
###  %bset ssl-verify-bots%b <#>
   Control certificate verification for linking to hubs

See also: set ssl-verify-clients
%{help=set ssl-verify-clients}%{+n}
###  %bset ssl-verify-clients%b <#>
   Control cerfificate verification for SSL listening ports. This includes
   leaf bots connecting to us, users telneting in and /ctcp bot chat.
   You can set this by adding together the numbers for all exceptions you
   want to enable. By default certificate verification is disabled and all
   certificates are assumed to be valid.
   There are the following exceptions with their corresponding numbers:
     1  enable certificate verification
     2  allow self-signed certificates
     4  don't check peer common or alt names
     8  allow expired certificates
     16 allow certificates which are not valid yet
     32 allow revoked certificates
